pc4-linux@pc4-linux:~/Pobrane$ sudo ./symulacja_scada.sh 
+ set +e
+ trap cleanup EXIT
+ IFACE_SERVER=ens37
+ IFACE_MODBUS=ens38
+ ip link show ens37
+ ip link show ens38
+ ip netns add ns_server
+ ip netns add ns_client_modbus
+ ip netns add ns_client_s7
+ ip link set ens37 netns ns_server
+ ip link set ens38 netns ns_client_modbus
+ ip netns exec ns_server ip addr add 192.168.81.10/24 dev ens37
+ ip netns exec ns_server ip link set ens37 up
+ ip netns exec ns_client_modbus ip link set ens38 up
+ ip link add veth_s7_br type veth peer name veth_s7
+ ip link set veth_s7_br netns ns_client_modbus
+ ip link set veth_s7 netns ns_client_s7
+ ip netns exec ns_client_s7 ip addr add 192.168.82.20/24 dev veth_s7
+ ip netns exec ns_client_s7 ip link set veth_s7 up
+ ip netns exec ns_client_modbus brctl addbr br0
+ ip netns exec ns_client_modbus brctl addif br0 ens38
+ ip netns exec ns_client_modbus brctl addif br0 veth_s7_br
+ ip netns exec ns_client_modbus ip link set br0 up
+ ip netns exec ns_client_modbus ip link set ens38 up
+ ip netns exec ns_client_modbus ip link set veth_s7_br up
+ ip netns exec ns_client_modbus ip addr add 192.168.82.10/24 dev br0
+ echo 'Serwer Modbus uruchomiony'
Serwer Modbus uruchomiony
+ echo 'Serwer S7 uruchomiony'
Serwer S7 uruchomiony
+ sleep 5
+ ip netns exec ns_server bash -c '
python3 -c "
import time
from snap7.server import Server as S7Server
server = S7Server()
server.start(tcpport=102)
while True:
    time.sleep(1)
" '
+ ip netns exec ns_server bash -c '
python3 -c "
from pymodbus.server.sync import StartTcpServer
from pymodbus.datastore import ModbusSlaveContext, ModbusServerContext, ModbusSequentialDataBlock
store = ModbusSlaveContext(
    di=ModbusSequentialDataBlock(0, [17]*100),
    co=ModbusSequentialDataBlock(0, [17]*100),
    hr=ModbusSequentialDataBlock(0, [17]*100),
    ir=ModbusSequentialDataBlock(0, [17]*100))
context = ModbusServerContext(slaves=store, single=True)
StartTcpServer(context, address=(\"192.168.81.10\", 502))
" '
+ echo 'Klient Modbus uruchomiony'
Klient Modbus uruchomiony
+ echo 'Klient S7 uruchomiony'
Klient S7 uruchomiony
+ wait
+ ip netns exec ns_client_s7 bash -c '
python3 -c "
import time
import random
from snap7.client import Client as S7Client
client = S7Client()
client.connect(\"192.168.81.10\", 0, 1, 102)
data = bytearray([0]*10)
try:
    while True:
        value = random.randint(10, 20)
        data[0] = value
        client.db_write(1, 0, data)
        read_data = client.db_read(1, 0, 1)
        print(f\"S7 Client: Wrote and Read Value {read_data[0]}\")
        time.sleep(5)
except Exception as e:
    print(f\"S7 Client Error: {e}\")
finally:
    client.disconnect()
" '
+ ip netns exec ns_client_modbus bash -c '
python3 -c "
import random
import time
from pymodbus.client.sync import ModbusTcpClient
client = ModbusTcpClient(\"192.168.81.10\", port=502)
client.connect()
try:
    while True:
        value = random.randint(10, 20)
        client.write_register(1, value)
        response = client.read_holding_registers(1, 1)
        print(f\"Modbus Client: Wrote and Read Value {response.registers[0]}\")
        time.sleep(5)
except Exception as e:
    print(f\"Modbus Client Error: {e}\")
finally:
    client.close()
" '
Modbus Client Error: Modbus Error: [Connection] Failed to connect[ModbusTcpClient(192.168.81.10:502)]
b' TCP : Network is unreachable'
Traceback (most recent call last):
  File "<string>", line 6, in <module>
  File "/usr/local/lib/python3.8/dist-packages/snap7/client/__init__.py", line 24, in f
    check_error(code, context="client")
  File "/usr/local/lib/python3.8/dist-packages/snap7/common.py", line 89, in check_error
    raise RuntimeError(error)
RuntimeError: b' TCP : Network is unreachable'


